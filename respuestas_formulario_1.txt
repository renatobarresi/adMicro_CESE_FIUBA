##################-------Preguntas-------##################

Preguntas orientadoras

1. Describa brevemente los diferentes perfiles de familias de
microprocesadores/microcontroladores de ARM. Explique alguna de sus diferencias
características.

Cortex M

1. Describa brevemente las diferencias entre las familias de procesadores Cortex M0, M3 y
M4.

2. ¿Por qué se dice que el set de instrucciones Thumb permite mayor densidad de código?
Explique

3. ¿Qué entiende por arquitectura load-store? ¿Qué tipo de instrucciones no posee este
tipo de arquitectura?

4. ¿Cómo es el mapa de memoria de la familia?

5. ¿Qué ventajas presenta el uso de los “shadowed pointers” del PSP y el MSP?

6. Describa los diferentes modos de privilegio y operación del Cortex M, sus relaciones y
como se conmuta de uno al otro. Describa un ejemplo en el que se pasa del modo
privilegiado a no priviligiado y nuevamente a privilegiado.

7. ¿Qué se entiende por modelo de registros ortogonal? Dé un ejemplo

8. ¿Qué ventajas presenta el uso de intrucciones de ejecución condicional (IT)? Dé un
ejemplo

9. Describa brevemente las excepciones más prioritarias (reset, NMI, Hardfault).

10. Describa las funciones principales de la pila. ¿Cómo resuelve la arquitectura el llamado
a funciones y su retorno?

11. Describa la secuencia de reset del microprocesador.

12. ¿Qué entiende por “core peripherals”? ¿Qué diferencia existe entre estos y el resto de
los periféricos?

13. ¿Cómo se implementan las prioridades de las interrupciones? Dé un ejemplo

14. ¿Qué es el CMSIS? ¿Qué función cumple? ¿Quién lo provee? ¿Qué ventajas aporta?

15. Cuando ocurre una interrupción, asumiendo que está habilitada ¿Cómo opera el
microprocesador para atender a la subrutina correspondiente? Explique con un ejemplo

17. ¿Cómo cambia la operación de stacking al utilizar la unidad de punto flotante?

16. Explique las características avanzadas de atención a interrupciones: tail chaining y late
arrival.

17. ¿Qué es el systick? ¿Por qué puede afirmarse que su implementación favorece la
portabilidad de los sistemas operativos embebidos?

18. ¿Qué funciones cumple la unidad de protección de memoria (MPU)?

19. ¿Cuántas regiones pueden configurarse como máximo? ¿Qué ocurre en caso de haber
solapamientos de las regiones? ¿Qué ocurre con las zonas de memoria no cubiertas por las
regiones definidas?

20. ¿Para qué se suele utilizar la excepción PendSV? ¿Cómo se relaciona su uso con el resto
de las excepciones? Dé un ejemplo

21. ¿Para qué se suele utilizar la excepción SVC? Expliquelo dentro de un marco de un
sistema operativo embebido.

ISA

1. ¿Qué son los sufijos y para qué se los utiliza? Dé un ejemplo

2. ¿Para qué se utiliza el sufijo ‘s’? Dé un ejemplo

3. ¿Qué utilidad tiene la implementación de instrucciones de aritmética saturada? Dé un
ejemplo con operaciones con datos de 8 bits.

4. Describa brevemente la interfaz entre assembler y C ¿Cómo se reciben los argumentos
de las funciones? ¿Cómo se devuelve el resultado? ¿Qué registros deben guardarse en la
pila antes de ser modificados?

5. ¿Qué es una instrucción SIMD? ¿En qué se aplican y que ventajas reporta su uso? Dé un
ejemplo.

##################-------Respuestas-------##################

Preguntas orientadoras

1. La primera familia de procesadores que ARM introdujo al mercado fue el ARM6, que tenia como ventaja principal respecto a los demas procesadores de 32-bits la capacidad de soportar dos set de instrucciones. Tambien desarrollaron procesadores como el ARM9 y ARM11, utilizados en microcontroladores de alta performance y celulares. Luego del exito de estos procesadores, ARM diversifico a su portfolio presentando a la familia de procesadores Cortex, los cuales se dividen en los siguientes perfiles:
	*Cortex-A: utilizado en aplicaciones que requieran manejar aplicaciones complejas como sistemas operativos de proposito general.
	*Cortex-R: disenado para sistemas embebidos que requieran control duro en tiempo real.
	*Cortex-M: Disenado para microcontorladores que requieran bajo consumo energetico, bajo costo, eficiencia alta, latencia de interrupcion baja, etc.

Es importante mencionar que el perfil A esta basado en la arquitectura ARMv7-A, el perfil R esta basado en la arquitectura ARMv7-R, y el perfil M se divide en arquitectura ARMv7-M y ARMv6-M.

Cortex M

1. El perfil M tiene como principales procesadores al Cortex-M0, Cortex-M3 y Cortex-M4. El cortex-M0 esta enfocado a aplicaciones de bajo consumo energetico y baja complejidad, su arquitectura esta basada en la de ARMv6-M. El cortex-M3 es parecido al cortex-M4, debido a que los dos presentan a la mayoria de las instrucciones, tambien tienen el mismo modelo de manejo de interrupciones o NVIC. Sin embargo, el cortex-M4 es mejor para operaciones de procesamiento digital de senales. 

2. Debido a que las instrucciones Thumb son de 16 bits, y otorgan casi las mismas funcionalidades que las instrucciones ARM de 32 bits, es posible lograr las mismas tareas con un menor uso de memoria, con la desventaja de que la performance del procesador disminuye.

3. La arquitectura load-store es una caracteristica de un conjunto de instructiones, en donde las instrucciones son divididas en dos categorias: las de acceso a memoria y operaciones con la unidad aritmetica logica. En ARM, solo las instrucciones LDR y STR pueden acceder a memoria, y para poder realizar operaciones se debe de mover a los datos en memoria a los registros pertinentes del banco de registros del procesador.   
 
14. Common Microcontroller Software Interface Standard o CMSIS, desarrollado por ARM, es una capa de abstraccion compuesta de APIs, frameworks y flujos de trabajo desarrollado para microcontroladores que utilizen procesadores ARM. Los componentes del CMSIS permiten al programador tener una interfaz al procesador y perifericos lo que conlleva a varias ventajas como por ejemplo; simplificacion del codigo, rehutilizacion de software y reduccion de la curva de aprendizaje para los desarrolladores.
